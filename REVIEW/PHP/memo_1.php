<?php
// print와 echo 는 동일한 기능을 하지만 print는 리턴값이 있고 echo는 리턴값이 없음
// 그래서 print가 echo보다 살짝 느려서 잘 사용하지 않음 


//print_r과 var_dump는 보안상의 문제로 사용하지 않음
// $arr = array(1,2,3);
// print_r($arr);           :키 값과 원소값을 보여줌
// var_dump($arr);       // var_dump() : 출력하고자 하는 것의 모든 데이터를 보여준다. 


//----------------------------------------------------------------------------

// 대입연산자 중 .=는 문자 뒤에 이어줌
// ex)
// $str = "문자";
// $str .= " 입니다.";
// echo $str;                      // "문자 입니다." 

// 증가 감소를 변수 앞에 사용하면 사용한 즉시 증가/감소 
// 증가 감소를 변수 뒤에 사용하면 그 다음에 변수를 불러올 때 증가된다.

// 데이터를 비교할 때 데이터 형식까지 비교해야 버그가 줄어든다. 
// !== , === 

// 논리연산자
//  &&      and 연산자 : 모든 조건이 만족
//  ||      or 연산자 : 여러 조건중 하나만 만족해도 됨
// ! : 논리 부정 연산자     결과를 반전          
// 변수앞에 !가 붙으면 해당 변수의 boolean 값을 반대로 뒤집는다. 

// 삼항연산자 : 조건 ? 참일경우 : 거짓일 경우
// $i = 1;
// $str = "";
// $i > 0 ? $str = "000" : $str = "111";
// echo $str;

//----------------------------------------------------------------------------

//조건의 값이 null이면 거짓이라 실행안됨

// if문

// if( 조건 ){
//     조건이 참일 경우 실행
// } else if(조건 ){
// if 조건이 참이 아닐 경우, else if문이 참이면  실행
// } else{
//     if문과 else if문이 참이 아닐 경우 실행
// }


//switch문 
// 비교해야할 값이 정해져 있을 때 사용하는 것이 좋음
// 변수에 대한 여러가지 경우에 대해 한 분기 처리
// case를 끝내고 switch문을 끝내줘야 하기 때문에 
// switch문에는 무조건 case마다 break를 적어줘야함 

// $val = 1;
//     switch ($val) {
//         case 0:
//             echo "숫자 0입니다.";
//             break;
//         case 1:
//             echo "숫자 1입니다.";
//             break;
//         default: 
//             echo "디폴트 입니다.";
//             break;
//     }                // 숫자 1입니다. $val 에 0과 1이 아니고 다른 값이 있다면 "디폴트 값입니다."출력

//----------------------------------------------------------------------------

// while ( 조건 ){
//     반복하고 싶은 처리;
// }


// do while문
// do 문을 먼저 실행하고 조건이 참일동안 계속 실행 조건이 거짓이 되면 종료
// do{
// 반복할 처리
// }while(조건)


// for문 

// for($i=1;$i<=10;$i++){
//     echo $i."\n";
// }
// $i가 1부터 10보다 작거나 같을 때까지 코드가 실행이 되고 
// 코드가 한번 실행이 되면 행이 된 후 $i가 1만큼 증가하고 
// 조건이 거짓이 되면 코드가 for문이 종료된다. 

// 반복문의 시작과 끝을 안다면 for문을 사용하고,
// 모른다면 while 사용


//----------------------------------------------------------------------------

// array
// 일반적인 변수 설정은 값을 하나만 넣어줄 수 있는데,
// array를 사용하면 한 변수에 여러 값을 넣어줄 수 있다.
// 배열의 키 값은 따로 설정해 주지 않으면 0부터 시작함. 
// 배열 안에 여라가지 데이터타입의 값들이 들어갈 수 있다.(정수형, 실수형, 문자형, 문자열)

// array는 for과 궁합이 좋음
// $arr = array(1,2,3,4);
// for($i=0;$i<count($arr);$i++){           //count() : 배열의 원소의 개수를 알아내는 함수
//     echo $arr[$i]."\n";                  // $arr[$i] : 배열의 인덱스값 $i인 원소 출력
// }
// : 1,2,3,4

// $arr[]= 5;           $arr 배열에 원소값 5가 추가된다. 
// print_r($arr);

// * 연상 배열 * 
// key 를 가지고 배열의 값을 가져온다. 
// 연상 배열은 키 값을 따로 지정해 줬기 때문에 인덱스 값으로 출력 못한다

// $ass_arr = array("한식"=>"비빔밥", "중식"=>"짜장면","일식"=>"초밥");
// echo $ass_arr[0];                : 출력 안됨 
// echo $ass_arr["한식"];

// 다차원 배열 
// 기본 2차열 배열
// $arr_temp = array
//             (
//                 array(1,2,3,4)
//                 ,array(5,6,7,8)
//             );

// echo $arr_temp[1][3];    //:8


// 3차원 배열
// $arr_temp = array(
//                 array(1,2,3,4)
//                 ,array(5,6,7,8)
//                 ,array(
//                     array(9,10,11)
//                 )
//             );


// echo $arr_temp[2][0][1];

// echo $arr_temp[0][0][1]   // 3번째 방이 없기 때문에 에러 뜸


// unset() : 배열의 원소를 삭제하는 함수
// 키 값이 사라지기 때문에 주의해야 함. 

// foreach()
//  : 배열이나 객체의 속성을 반복하면서 요소를 처리하는 데 사용하는 제어 구문

// foreach($arr as $value)
//          :  $arr의 배열의 요소를 하나씩 가져와서 $value에 할당

// foreach($arr as $key => $value)
//          : $arr 배열의 객체의 속성을 반복하는 경우
//          $arr의 속성을 하나씩 가져와 $key와 $value에 할당

// $ass_arr = array("한식"=>"비빔밥", "중식"=>"짜장면","일식"=>"초밥");

// foreach($ass_arr as $key => $val){
//     echo $key." => ".$val."\n";
// }


// array_diff() : 중복되지 않는 원소를 반환하는 함수
// array_diff(배열1, 배열2)
//  : 배열1에 있는 원소와 배열2에 있는 원소를 비교하여 중복되지 않는 원소를 반환한다. 

// sort() : 숫자를 오름차순으로 정렬하는 함수
// rsort(): 숫자를 내림차순으로 정렬하는 함수
// asort() : 알파벳 순으로 정렬하는 함수
// arsort() : z부터  a 순으로 정렬하는 함수
// ksort() : 한글 순서대로 정렬하는 함수
// krsort() : 한글을 역순으로 정렬하는 함수 


//----------------------------------------------------------------------------
















?>